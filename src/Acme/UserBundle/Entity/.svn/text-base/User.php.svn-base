<?php

// src/Acme/UserBundle/Entity/User.php
namespace Acme\UserBundle\Entity;

use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;
use Acme\UserBundle\Entity\Region;
use CTM\DownloadBundle\Entity\File;
use CTM\TranslateBundle\Entity\Language;
use CTM\ProposalBundle\Entity\Currency;

/**
 * Acme\UserBundle\Entity\User
 *
 * @ORM\Table(name="Users")
 * @ORM\Entity(repositoryClass="Acme\UserBundle\Entity\UserRepository")
 */
class User implements UserInterface
{
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;


    /**
     * @ORM\Column(type="string", length=255, unique=true)
     */
    private $username;

    /**
     * @ORM\Column(type="string", length=160)
     */
    private $firstname;

    /**
     * @ORM\Column(type="string", length=160)
     */
    private $lastname;

    /**
     * @ORM\Column(type="string", length=255)
     */
    private $email;


    /**
     * @ORM\Column(type="string", length=255 ,nullable=true)
     */
    private $street;

    /**
     * @ORM\Column(type="string", length=255 ,nullable=true)
     */
    private $city;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    private $zip;


    /**
     * @var string $country
     *
     * @ORM\Column(name="country", type="string", length=255, nullable=true)
     */
    private $country;


    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    private $telephone;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    private $mobile;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    private $fax;


    /**
     * @ORM\Column(type="string", length=32)
     */
    private $salt;

    /**
     * @ORM\Column(type="string", length=40)
     */
    private $password;

    /**
     * @ORM\Column(name="is_active", type="boolean")
     */
    private $isActive;

    /**
     * @ORM\Column(name="deleted", type="boolean")
     */
    private $deleted;
    /**
     * @var datetime $modified
     *
     * @ORM\Column(name="modified", type="datetime", nullable=true)
     */
    private $modified;

    /**
     * @var integer $modifiedUser
     *
     * @ORM\Column(name="modified_user", type="integer", nullable=true)
     */
    private $modifiedUser;

    /**
     * @var datetime $created
     *
     * @ORM\Column(name="created", type="datetime", nullable=true)
     */
    private $created;


    /**
     * @ORM\ManyToMany(targetEntity="Group", inversedBy="users")
     *
     */
    private $groups;

    /**
     * @var string $passwordrepeat
     */
    private $passwordrepeat;

    /**
     * @var Region
     *
     * @ORM\ManyToOne(targetEntity="Region")
     * @ORM\JoinColumns({
     * @ORM\JoinColumn(name="Region_id", referencedColumnName="id")
     * })
     */
    private $Region;

    /**
     * @var CTM\TranslateBundle\Entity\Language
     *
     * @ORM\ManyToOne(targetEntity="CTM\TranslateBundle\Entity\Language")
     * @ORM\JoinColumns({
     * @ORM\JoinColumn(name="Language_id", referencedColumnName="id")
     * })
     */
    private $Language;


    /**
     * @var CTM\DownloadBundle\Entity\File
     *
     * @ORM\ManyToOne(targetEntity="CTM\DownloadBundle\Entity\File")
     * @ORM\JoinColumns({
     * @ORM\JoinColumn(name="File_id", referencedColumnName="id")
     * })
     */
    private $file;

    /**
     * @var string $requestCode
     *
     * @ORM\Column(name="requestCode", type="string", length=255, nullable=true)
     */
    private $requestCode;

    /**
     * @var CTM\ProposalBundle\Entity\Currency
     *
     * @ORM\ManyToOne(targetEntity="CTM\ProposalBundle\Entity\Currency")
     * @ORM\JoinColumns({
     * @ORM\JoinColumn(name="Currency_id", referencedColumnName="id")
     * })
     */
    private $currency;

    public function __construct()
    {

        $this->groups = new \Doctrine\Common\Collections\ArrayCollection();

        $this->isActive = true;
        $this->salt = md5(uniqid(null, true));
    }

    public function __toString()
    {

        return $this->getUsername();

    }

    /**
     * @inheritDoc
     */
    public function getPasswordrepeat()
    {
        return $this->passwordrepeat;
    }

    /**
     * @inheritDoc
     */
    public function setPasswordrepeat($passwordrepeat)
    {
        $this->passwordrepeat = $passwordrepeat;
    }

    /**
     * @inheritDoc
     */
    public function isPasswordLegal()
    {
        return $this->password != $this->passwordrepeat;
    }


    /**
     * @inheritDoc
     */
    public function getRoles()
    {
        return $this->groups->toArray();
    }


    /**
     * @inheritDoc
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * @inheritDoc
     */
    public function getSalt()
    {
        return $this->salt;
    }

    /**
     * @inheritDoc
     */
    public function getPassword()
    {
        return $this->password;
    }


    /**
     * @inheritDoc
     */
    public function eraseCredentials()
    {
    }

    /**
     * @inheritDoc
     */
    public function equals(UserInterface $user)
    {
        return $this->username === $user->getUsername();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set username
     *
     * @param string $username
     */
    public function setUsername($username)
    {
        $this->username = $username;
    }

    /**
     * Set salt
     *
     * @param string $salt
     */
    public function setSalt($salt)
    {
        $this->salt = $salt;
    }

    /**
     * Set password
     *
     * @param string $password
     */
    public function setPassword($password)
    {
        $this->password = $password;
    }

    /**
     * Set email
     *
     * @param string $email
     */
    public function setEmail($email)
    {
        $this->email = $email;
    }

    /**
     * Get email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set isActive
     *
     * @param boolean $isActive
     */
    public function setIsActive($isActive)
    {
        $this->isActive = $isActive;
    }

    /**
     * Get isActive
     *
     * @return boolean
     */
    public function getIsActive()
    {
        return $this->isActive;
    }

    /**
     * Add groups
     *
     * @param Group $groups
     */
    public function addGroup(Group $groups)
    {
        $this->groups[] = $groups;
    }

    /**
     * Get groups
     *
     * @return Collection
     */
    public function getGroups()
    {
        return $this->groups;
    }

    /**
     * Set deleted
     *
     * @param boolean $deleted
     */
    public function setDeleted($deleted)
    {
        $this->deleted = $deleted;
    }

    /**
     * Get deleted
     *
     * @return boolean
     */
    public function getDeleted()
    {
        return $this->deleted;
    }

    /**
     * Set modified
     *
     * @param datetime $modified
     */
    public function setModified($modified)
    {
        $this->modified = $modified;
    }

    /**
     * Get modified
     *
     * @return datetime
     */
    public function getModified()
    {
        return $this->modified;
    }

    /**
     * Set modifiedUser
     *
     * @param integer $modifiedUser
     */
    public function setModifiedUser($modifiedUser)
    {
        $this->modifiedUser = $modifiedUser;
    }

    /**
     * Get modifiedUser
     *
     * @return integer
     */
    public function getModifiedUser()
    {
        return $this->modifiedUser;
    }

    /**
     * Set created
     *
     * @param datetime $created
     */
    public function setCreated($created)
    {
        $this->created = $created;
    }

    /**
     * Get created
     *
     * @return datetime
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Set firstname
     *
     * @param string $firstname
     */
    public function setFirstname($firstname)
    {
        $this->firstname = $firstname;
    }

    /**
     * Get firstname
     *
     * @return string
     */
    public function getFirstname()
    {
        return $this->firstname;
    }

    /**
     * Set lastname
     *
     * @param string $lastname
     */
    public function setLastname($lastname)
    {
        $this->lastname = $lastname;
    }

    /**
     * Get lastname
     *
     * @return string
     */
    public function getLastname()
    {
        return $this->lastname;
    }

    /**
     * Set Region
     *
     * @param  $region
     */
    public function setRegion(Region $region)
    {
        $this->Region = $region;
    }

    /**
     * Get Region
     *
     * @return Region
     */
    public function getRegion()
    {
        return $this->Region;
    }

    /**
     * @param \CTM\DownloadBundle\Entity\File $file
     */
    public function setFile($file)
    {
        $this->file = $file;
    }

    /**
     * @return \CTM\DownloadBundle\Entity\File
     */
    public function getFile()
    {
        return $this->file;
    }


    /**
     * Set street
     *
     * @param string $street
     */
    public function setStreet($street)
    {
        $this->street = $street;
    }

    /**
     * Get street
     *
     * @return string
     */
    public function getStreet()
    {
        return $this->street;
    }

    /**
     * Set city
     *
     * @param string $city
     */
    public function setCity($city)
    {
        $this->city = $city;
    }

    /**
     * Get city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->city;
    }

    /**
     * Set zip
     *
     * @param string $zip
     */
    public function setZip($zip)
    {
        $this->zip = $zip;
    }

    /**
     * Get zip
     *
     * @return string
     */
    public function getZip()
    {
        return $this->zip;
    }

    /**
     * Set telephone
     *
     * @param string $telephone
     */
    public function setTelephone($telephone)
    {
        $this->telephone = $telephone;
    }

    /**
     * Get telephone
     *
     * @return string
     */
    public function getTelephone()
    {
        return $this->telephone;
    }

    /**
     * Set mobile
     *
     * @param string $mobile
     */
    public function setMobile($mobile)
    {
        $this->mobile = $mobile;
    }

    /**
     * Get mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->mobile;
    }

    /**
     * Set fax
     *
     * @param string $fax
     */
    public function setFax($fax)
    {
        $this->fax = $fax;
    }

    /**
     * Get fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->fax;
    }

    /**
     * Set Language
     *
     * @param CTM\TranslateBundle\Entity\Language $language
     */
    public function setLanguage($language)
    {
        $this->Language = $language;
    }

    /**
     * Get Language
     *
     * @return CTM\TranslateBundle\Entity\Language
     */
    public function getLanguage()
    {
        return $this->Language;
    }

    /**
     * Set country
     *
     * @param string $country
     */
    public function setCountry($country)
    {
        $this->country = $country;
    }

    /**
     * Get country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->country;
    }

    /**
     * @param string $requestCode
     */
    public function setRequestCode($requestCode)
    {
        $this->requestCode = $requestCode;
    }

    /**
     * @return string
     */
    public function getRequestCode()
    {
        return $this->requestCode;
    }

    /**
     * @param CTM\ProposalBundle\Entity\Currency $currency
     */
    public function setCurrency($currency)
    {
        $this->currency = $currency;
    }

    /**
     * @return CTM\ProposalBundle\Entity\Currency
     */
    public function getCurrency()
    {
        return $this->currency;
    }
}